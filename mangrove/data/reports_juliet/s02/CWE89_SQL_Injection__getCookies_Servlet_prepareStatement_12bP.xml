<BugCollection analysisTimestamp="1488586613284" release="" sequence="0" timestamp="1487896524000" version="3.0.1">
  <BugInstance abbrev="SECSQLIJDBC" category="SECURITY" priority="1" rank="10" type="SQL_INJECTION_JDBC">
    <Class classname="testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12">
      <SourceLine classname="testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12" end="446" sourcefile="CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" sourcepath="testcases/CWE89_SQL_Injection/s02/CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" start="28" />
    </Class>
    <Method classname="testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12" isStatic="false" name="bad" signature="(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V">
      <SourceLine classname="testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12" end="160" endBytecode="1732" sourcefile="CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" sourcepath="testcases/CWE89_SQL_Injection/s02/CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" start="33" startBytecode="0" />
    </Method>
    <SourceLine classname="testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12" end="62" endBytecode="79" sourcefile="CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" sourcepath="testcases/CWE89_SQL_Injection/s02/CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" start="62" startBytecode="79" />
    <String role="Sink method" value="Connection.prepareStatement(...)" />
    <String role="Instruction Handle" value="  79: invokeinterface[185](5) 14" />
    <String role="Parameter Taint" value="T {toString()}" />
    <String role="Taint Frame" value="[U0[2] {[?]+[[?]+[?]]}U1[1] {[?]+[[?]+[?]]}U2[0] {[?]+[[?]+[?]]}T3 {[&quot;foo&quot;]+[[&quot;&quot;]+[getValue()]]}U4 {getDBConnection()}N5 {NULL}U6 {[?]+[[?]+[?]]}U7 {[?]+[[?]+[?]]}U8 {[?]+[[?]+[?]]}U9 {[?]+[[?]+[?]]}U10 {[?]+[[?]+[?]]}|U4 {getDBConnection()}T {toString()}]" />
    <String role="Method Bytecode" value="Code(max_stack = 4, max_locals = 11, code_length = 677) 0:    invokestatic testcasesupport.IO.staticReturnsTrueOrFalse ()Z (2) 3:    ifeq  #33 6:    ldc  &quot;&quot; (3) 8:    astore_3 9:    aload_1 10:   invokeinterface javax.servlet.http.HttpServletRequest.getCookies ()[Ljavax/servlet/http/Cookie; (4) 1 0 15:   astore  %4 17:   aload  %4 19:   ifnull  #30 22:   aload  %4 24:   iconst_0 25:   aaload 26:   invokevirtual javax.servlet.http.Cookie.getValue ()Ljava/lang/String; (5) 29:   astore_3 30:   goto  #36 33:   ldc  &quot;foo&quot; (6) 35:   astore_3 36:   invokestatic testcasesupport.IO.staticReturnsTrueOrFalse ()Z (2) 39:   ifeq  #367 42:   aconst_null 43:   astore  %4 45:   aconst_null 46:   astore  %5 48:   invokestatic testcasesupport.IO.getDBConnection ()Ljava/sql/Connection; (7) 51:   astore  %4 53:   aload  %4 55:   new  &lt;java.lang.StringBuilder&gt; (8) 58:   dup 59:   invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (9) 62:   ldc  &quot;insert into users (status) values ('updated') where name='&quot; (10) 64:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 67:   aload_3 68:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 71:   ldc  &quot;'&quot; (12) 73:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 76:   invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (13) 79:   invokeinterface java.sql.Connection.prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; (14) 2 0 84:   astore  %5 86:   aload  %5 88:   invokeinterface java.sql.PreparedStatement.execute ()Z (15) 1 0 93:   invokestatic java.lang.Boolean.valueOf (Z)Ljava/lang/Boolean; (16) 96:   astore  %6 98:   aload  %6 100:  invokevirtual java.lang.Boolean.booleanValue ()Z (17) 103:  ifeq  #136 106:  new  &lt;java.lang.StringBuilder&gt; (8) 109:  dup 110:  invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (9) 113:  ldc  &quot;Name, &quot; (18) 115:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 118:  aload_3 119:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 122:  ldc  &quot;, updated successfully&quot; (19) 124:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 127:  invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (13) 130:  invokestatic testcasesupport.IO.writeLine (Ljava/lang/String;)V (20) 133:  goto  #158 136:  new  &lt;java.lang.StringBuilder&gt; (8) 139:  dup 140:  invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (9) 143:  ldc  &quot;Unable to update records for user: &quot; (21) 145:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 148:  aload_3 149:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 152:  invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (13) 155:  invokestatic testcasesupport.IO.writeLine (Ljava/lang/String;)V (20) 158:  aload  %5 160:  ifnull  #170 163:  aload  %5 165:  invokeinterface java.sql.PreparedStatement.close ()V (22) 1 0 170:  goto  #188 173:  astore  %6 175:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 178:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 181:  ldc  &quot;Error closing PreparedStatement&quot; (26) 183:  aload  %6 185:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 188:  aload  %4 190:  ifnull  #200 193:  aload  %4 195:  invokeinterface java.sql.Connection.close ()V (28) 1 0 200:  goto  #364 203:  astore  %6 205:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 208:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 211:  ldc  &quot;Error closing Connection&quot; (29) 213:  aload  %6 215:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 218:  goto  #364 221:  astore  %6 223:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 226:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 229:  ldc  &quot;Error getting database connection&quot; (30) 231:  aload  %6 233:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 236:  aload  %5 238:  ifnull  #248 241:  aload  %5 243:  invokeinterface java.sql.PreparedStatement.close ()V (22) 1 0 248:  goto  #266 251:  astore  %6 253:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 256:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 259:  ldc  &quot;Error closing PreparedStatement&quot; (26) 261:  aload  %6 263:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 266:  aload  %4 268:  ifnull  #278 271:  aload  %4 273:  invokeinterface java.sql.Connection.close ()V (28) 1 0 278:  goto  #364 281:  astore  %6 283:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 286:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 289:  ldc  &quot;Error closing Connection&quot; (29) 291:  aload  %6 293:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 296:  goto  #364 299:  astore  %7 301:  aload  %5 303:  ifnull  #313 306:  aload  %5 308:  invokeinterface java.sql.PreparedStatement.close ()V (22) 1 0 313:  goto  #331 316:  astore  %8 318:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 321:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 324:  ldc  &quot;Error closing PreparedStatement&quot; (26) 326:  aload  %8 328:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 331:  aload  %4 333:  ifnull  #343 336:  aload  %4 338:  invokeinterface java.sql.Connection.close ()V (28) 1 0 343:  goto  #361 346:  astore  %8 348:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 351:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 354:  ldc  &quot;Error closing Connection&quot; (29) 356:  aload  %8 358:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 361:  aload  %7 363:  athrow 364:  goto  #676 367:  aconst_null 368:  astore  %4 370:  aconst_null 371:  astore  %5 373:  invokestatic testcasesupport.IO.getDBConnection ()Ljava/sql/Connection; (7) 376:  astore  %4 378:  aload  %4 380:  ldc  &quot;insert into users (status) values ('updated') where name=?&quot; (31) 382:  invokeinterface java.sql.Connection.prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; (14) 2 0 387:  astore  %5 389:  aload  %5 391:  iconst_1 392:  aload_3 393:  invokeinterface java.sql.PreparedStatement.setString (ILjava/lang/String;)V (32) 3 0 398:  aload  %5 400:  invokeinterface java.sql.PreparedStatement.execute ()Z (15) 1 0 405:  invokestatic java.lang.Boolean.valueOf (Z)Ljava/lang/Boolean; (16) 408:  astore  %6 410:  aload  %6 412:  invokevirtual java.lang.Boolean.booleanValue ()Z (17) 415:  ifeq  #448 418:  new  &lt;java.lang.StringBuilder&gt; (8) 421:  dup 422:  invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (9) 425:  ldc  &quot;Name, &quot; (18) 427:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 430:  aload_3 431:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 434:  ldc  &quot;, updated successfully&quot; (19) 436:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 439:  invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (13) 442:  invokestatic testcasesupport.IO.writeLine (Ljava/lang/String;)V (20) 445:  goto  #470 448:  new  &lt;java.lang.StringBuilder&gt; (8) 451:  dup 452:  invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (9) 455:  ldc  &quot;Unable to update records for user: &quot; (21) 457:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 460:  aload_3 461:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11) 464:  invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (13) 467:  invokestatic testcasesupport.IO.writeLine (Ljava/lang/String;)V (20) 470:  aload  %5 472:  ifnull  #482 475:  aload  %5 477:  invokeinterface java.sql.PreparedStatement.close ()V (22) 1 0 482:  goto  #500 485:  astore  %6 487:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 490:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 493:  ldc  &quot;Error closing PreparedStatement&quot; (26) 495:  aload  %6 497:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 500:  aload  %4 502:  ifnull  #512 505:  aload  %4 507:  invokeinterface java.sql.Connection.close ()V (28) 1 0 512:  goto  #676 515:  astore  %6 517:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 520:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 523:  ldc  &quot;Error closing Connection&quot; (29) 525:  aload  %6 527:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 530:  goto  #676 533:  astore  %6 535:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 538:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 541:  ldc  &quot;Error getting database connection&quot; (30) 543:  aload  %6 545:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 548:  aload  %5 550:  ifnull  #560 553:  aload  %5 555:  invokeinterface java.sql.PreparedStatement.close ()V (22) 1 0 560:  goto  #578 563:  astore  %6 565:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 568:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 571:  ldc  &quot;Error closing PreparedStatement&quot; (26) 573:  aload  %6 575:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 578:  aload  %4 580:  ifnull  #590 583:  aload  %4 585:  invokeinterface java.sql.Connection.close ()V (28) 1 0 590:  goto  #676 593:  astore  %6 595:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 598:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 601:  ldc  &quot;Error closing Connection&quot; (29) 603:  aload  %6 605:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 608:  goto  #676 611:  astore  %9 613:  aload  %5 615:  ifnull  #625 618:  aload  %5 620:  invokeinterface java.sql.PreparedStatement.close ()V (22) 1 0 625:  goto  #643 628:  astore  %10 630:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 633:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 636:  ldc  &quot;Error closing PreparedStatement&quot; (26) 638:  aload  %10 640:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 643:  aload  %4 645:  ifnull  #655 648:  aload  %4 650:  invokeinterface java.sql.Connection.close ()V (28) 1 0 655:  goto  #673 658:  astore  %10 660:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (24) 663:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (25) 666:  ldc  &quot;Error closing Connection&quot; (29) 668:  aload  %10 670:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (27) 673:  aload  %9 675:  athrow 676:  return  Exception handler(s) =  From To Handler Type 158 170 173 java.sql.SQLException(23) 188 200 203 java.sql.SQLException(23) 48 158 221 java.sql.SQLException(23) 236 248 251 java.sql.SQLException(23) 266 278 281 java.sql.SQLException(23) 48 158 299 &lt;Any exception&gt;(0) 221 236 299 &lt;Any exception&gt;(0) 301 313 316 java.sql.SQLException(23) 331 343 346 java.sql.SQLException(23) 299 301 299 &lt;Any exception&gt;(0) 470 482 485 java.sql.SQLException(23) 500 512 515 java.sql.SQLException(23) 373 470 533 java.sql.SQLException(23) 548 560 563 java.sql.SQLException(23) 578 590 593 java.sql.SQLException(23) 373 470 611 &lt;Any exception&gt;(0) 533 548 611 &lt;Any exception&gt;(0) 613 625 628 java.sql.SQLException(23) 643 655 658 java.sql.SQLException(23) 611 613 611 &lt;Any exception&gt;(0)  Attribute(s) =  LineNumber(0, 33), LineNumber(6, 35), LineNumber(9, 38), LineNumber(17, 39),  LineNumber(22, 42), LineNumber(30, 44), LineNumber(33, 50), LineNumber(36, 54),  LineNumber(42, 56), LineNumber(45, 57), LineNumber(48, 61), LineNumber(53, 62),  LineNumber(86, 63), LineNumber(98, 64), LineNumber(106, 66), LineNumber(136, 70),  LineNumber(158, 81), LineNumber(163, 83), LineNumber(170, 89), LineNumber(173, 86),  LineNumber(175, 88), LineNumber(188, 93), LineNumber(193, 95), LineNumber(200, 101),  LineNumber(203, 98), LineNumber(205, 100), LineNumber(218, 102), LineNumber(221, 73),  LineNumber(223, 75), LineNumber(236, 81), LineNumber(241, 83), LineNumber(248, 89),  LineNumber(251, 86), LineNumber(253, 88), LineNumber(266, 93), LineNumber(271, 95),  LineNumber(278, 101), LineNumber(281, 98), LineNumber(283, 100), LineNumber(296, 102),  LineNumber(299, 79), LineNumber(301, 81), LineNumber(306, 83), LineNumber(313, 89),  LineNumber(316, 86), LineNumber(318, 88), LineNumber(331, 93), LineNumber(336, 95),  LineNumber(343, 101), LineNumber(346, 98), LineNumber(348, 100), LineNumber(361, 101),  LineNumber(364, 103), LineNumber(367, 107), LineNumber(370, 108), LineNumber(373, 113),  LineNumber(378, 114), LineNumber(389, 115), LineNumber(398, 117), LineNumber(410, 119),  LineNumber(418, 121), LineNumber(448, 125), LineNumber(470, 136), LineNumber(475, 138),  LineNumber(482, 144), LineNumber(485, 141), LineNumber(487, 143), LineNumber(500, 148),  LineNumber(505, 150), LineNumber(512, 156), LineNumber(515, 153), LineNumber(517, 155),  LineNumber(530, 157), LineNumber(533, 128), LineNumber(535, 130), LineNumber(548, 136),  LineNumber(553, 138), LineNumber(560, 144), LineNumber(563, 141), LineNumber(565, 143),  LineNumber(578, 148), LineNumber(583, 150), LineNumber(590, 156), LineNumber(593, 153),  LineNumber(595, 155), LineNumber(608, 157), LineNumber(611, 134), LineNumber(613, 136),  LineNumber(618, 138), LineNumber(625, 144), LineNumber(628, 141), LineNumber(630, 143),  LineNumber(643, 148), LineNumber(648, 150), LineNumber(655, 156), LineNumber(658, 153),  LineNumber(660, 155), LineNumber(673, 156), LineNumber(676, 160) LocalVariable(start_pc = 17, length = 13, index = 4:javax.servlet.http.Cookie[] cookieSources) LocalVariable(start_pc = 9, length = 24, index = 3:String data) LocalVariable(start_pc = 98, length = 60, index = 6:Boolean result) LocalVariable(start_pc = 175, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 205, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 223, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 253, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 283, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 318, length = 13, index = 8:java.sql.SQLException exceptSql) LocalVariable(start_pc = 348, length = 13, index = 8:java.sql.SQLException exceptSql) LocalVariable(start_pc = 45, length = 319, index = 4:java.sql.Connection dbConnection) LocalVariable(start_pc = 48, length = 316, index = 5:java.sql.PreparedStatement sqlStatement) LocalVariable(start_pc = 410, length = 60, index = 6:Boolean result) LocalVariable(start_pc = 487, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 517, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 535, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 565, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 595, length = 13, index = 6:java.sql.SQLException exceptSql) LocalVariable(start_pc = 630, length = 13, index = 10:java.sql.SQLException exceptSql) LocalVariable(start_pc = 660, length = 13, index = 10:java.sql.SQLException exceptSql) LocalVariable(start_pc = 370, length = 306, index = 4:java.sql.Connection dbConnection) LocalVariable(start_pc = 373, length = 303, index = 5:java.sql.PreparedStatement sqlStatement) LocalVariable(start_pc = 0, length = 677, index = 0:testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12 this) LocalVariable(start_pc = 0, length = 677, index = 1:javax.servlet.http.HttpServletRequest request) LocalVariable(start_pc = 0, length = 677, index = 2:javax.servlet.http.HttpServletResponse response) LocalVariable(start_pc = 36, length = 641, index = 3:String data) StackMapTable((APPEND 1, offset delta=30, locals={(type=Object, class=java.lang.String)}), (CHOP 1, offset delta=2), (APPEND 1, offset delta=2, locals={(type=Object, class=java.lang.String)}), (APPEND 3, offset delta=99, locals={(type=Object, class=java.sql.Connection), (type=Object, class=java.sql.PreparedStatement), (type=Object, class=java.lang.Boolean)}), (CHOP 1, offset delta=21), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=26), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.lang.Throwable)}), (APPEND 2, offset delta=13, locals={(type=Bogus), (type=Object, class=java.lang.Throwable)}), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (FULL, offset delta=2, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.lang.String)}), (SAME, offset delta=2), (APPEND 3, offset delta=80, locals={(type=Object, class=java.sql.Connection), (type=Object, class=java.sql.PreparedStatement), (type=Object, class=java.lang.Boolean)}), (CHOP 1, offset delta=21), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=26), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.lang.Throwable)}), (FULL, offset delta=13, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.lang.String), (type=Object, class=java.sql.Connection), (type=Object, class=java.sql.PreparedStatement), (type=Bogus), (type=Bogus), (type=Bogus), (type=Object, class=java.lang.Throwable)}), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (FULL, offset delta=2, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.lang.String)})) " />
    <SourceLine classname="testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12" end="42" endBytecode="26" sourcefile="CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" sourcepath="testcases/CWE89_SQL_Injection/s02/CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" start="42" startBytecode="26" />
    <SourceLine classname="testcases.CWE89_SQL_Injection.s02.CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12" end="62" endBytecode="73" sourcefile="CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" sourcepath="testcases/CWE89_SQL_Injection/s02/CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_12.java" start="62" startBytecode="73" />
  </BugInstance>
  </BugCollection>