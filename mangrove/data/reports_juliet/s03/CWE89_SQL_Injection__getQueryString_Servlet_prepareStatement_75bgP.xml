<BugCollection analysisTimestamp="1488584622526" release="" sequence="0" timestamp="1487896524000" version="3.0.1">
  <BugInstance abbrev="SECSQLIJDBC" category="SECURITY" priority="2" rank="12" type="SQL_INJECTION_JDBC">
    <Class classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b">
      <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="335" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="30" />
    </Class>
    <Method classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" isStatic="false" name="badSink" signature="([BLjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V">
      <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="131" endBytecode="1752" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="35" startBytecode="0" />
    </Method>
    <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="51" endBytecode="75" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="51" startBytecode="75" />
    <String role="Sink method" value="Connection.prepareStatement(...)" />
    <String role="Instruction Handle" value="  75: invokeinterface[185](5) 15" />
    <String role="Parameter Taint" value="U {toString()}" />
    <String role="Taint Frame" value="[U0[3] {?}U1[2](U) {[?]+[?]}U2[1] {?}U3[0] {?}U4 {[&lt;init&gt;()]+[?]}U5 {&lt;init&gt;()}U6 {readObject()}U7 {getDBConnection()}N8 {NULL}U9 {?}U10 {?}U11 {?}U12 {?}U13 {?}|U7 {getDBConnection()}U {toString()}]" />
    <String role="Method Bytecode" value="Code(max_stack = 4, max_locals = 14, code_length = 631) 0:    aconst_null 1:    astore  %4 3:    aconst_null 4:    astore  %5 6:    new  &lt;java.io.ByteArrayInputStream&gt; (2) 9:    dup 10:   aload_1 11:   invokespecial java.io.ByteArrayInputStream.&lt;init&gt; ([B)V (3) 14:   astore  %4 16:   new  &lt;java.io.ObjectInputStream&gt; (4) 19:   dup 20:   aload  %4 22:   invokespecial java.io.ObjectInputStream.&lt;init&gt; (Ljava/io/InputStream;)V (5) 25:   astore  %5 27:   aload  %5 29:   invokevirtual java.io.ObjectInputStream.readObject ()Ljava/lang/Object; (6) 32:   checkcast  &lt;java.lang.String&gt; (7) 35:   astore  %6 37:   aconst_null 38:   astore  %7 40:   aconst_null 41:   astore  %8 43:   invokestatic testcasesupport.IO.getDBConnection ()Ljava/sql/Connection; (8) 46:   astore  %7 48:   aload  %7 50:   new  &lt;java.lang.StringBuilder&gt; (9) 53:   dup 54:   invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (10) 57:   ldc  &quot;insert into users (status) values ('updated') where name='&quot; (11) 59:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 62:   aload  %6 64:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 67:   ldc  &quot;'&quot; (13) 69:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 72:   invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (14) 75:   invokeinterface java.sql.Connection.prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; (15) 2 0 80:   astore  %8 82:   aload  %8 84:   invokeinterface java.sql.PreparedStatement.execute ()Z (16) 1 0 89:   invokestatic java.lang.Boolean.valueOf (Z)Ljava/lang/Boolean; (17) 92:   astore  %9 94:   aload  %9 96:   invokevirtual java.lang.Boolean.booleanValue ()Z (18) 99:   ifeq  #133 102:  new  &lt;java.lang.StringBuilder&gt; (9) 105:  dup 106:  invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (10) 109:  ldc  &quot;Name, &quot; (19) 111:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 114:  aload  %6 116:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 119:  ldc  &quot;, updated successfully&quot; (20) 121:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 124:  invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (14) 127:  invokestatic testcasesupport.IO.writeLine (Ljava/lang/String;)V (21) 130:  goto  #156 133:  new  &lt;java.lang.StringBuilder&gt; (9) 136:  dup 137:  invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (10) 140:  ldc  &quot;Unable to update records for user: &quot; (22) 142:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 145:  aload  %6 147:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 150:  invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (14) 153:  invokestatic testcasesupport.IO.writeLine (Ljava/lang/String;)V (21) 156:  aload  %8 158:  ifnull  #168 161:  aload  %8 163:  invokeinterface java.sql.PreparedStatement.close ()V (23) 1 0 168:  goto  #186 171:  astore  %9 173:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 176:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 179:  ldc  &quot;Error closing PreparedStatement&quot; (27) 181:  aload  %9 183:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 186:  aload  %7 188:  ifnull  #198 191:  aload  %7 193:  invokeinterface java.sql.Connection.close ()V (29) 1 0 198:  goto  #362 201:  astore  %9 203:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 206:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 209:  ldc  &quot;Error closing Connection&quot; (30) 211:  aload  %9 213:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 216:  goto  #362 219:  astore  %9 221:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 224:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 227:  ldc  &quot;Error getting database connection&quot; (31) 229:  aload  %9 231:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 234:  aload  %8 236:  ifnull  #246 239:  aload  %8 241:  invokeinterface java.sql.PreparedStatement.close ()V (23) 1 0 246:  goto  #264 249:  astore  %9 251:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 254:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 257:  ldc  &quot;Error closing PreparedStatement&quot; (27) 259:  aload  %9 261:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 264:  aload  %7 266:  ifnull  #276 269:  aload  %7 271:  invokeinterface java.sql.Connection.close ()V (29) 1 0 276:  goto  #362 279:  astore  %9 281:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 284:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 287:  ldc  &quot;Error closing Connection&quot; (30) 289:  aload  %9 291:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 294:  goto  #362 297:  astore  %10 299:  aload  %8 301:  ifnull  #311 304:  aload  %8 306:  invokeinterface java.sql.PreparedStatement.close ()V (23) 1 0 311:  goto  #329 314:  astore  %11 316:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 319:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 322:  ldc  &quot;Error closing PreparedStatement&quot; (27) 324:  aload  %11 326:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 329:  aload  %7 331:  ifnull  #341 334:  aload  %7 336:  invokeinterface java.sql.Connection.close ()V (29) 1 0 341:  goto  #359 344:  astore  %11 346:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 349:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 352:  ldc  &quot;Error closing Connection&quot; (30) 354:  aload  %11 356:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 359:  aload  %10 361:  athrow 362:  aload  %5 364:  ifnull  #372 367:  aload  %5 369:  invokevirtual java.io.ObjectInputStream.close ()V (32) 372:  goto  #390 375:  astore  %6 377:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 380:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 383:  ldc  &quot;Error closing ObjectInputStream&quot; (34) 385:  aload  %6 387:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 390:  aload  %4 392:  ifnull  #400 395:  aload  %4 397:  invokevirtual java.io.ByteArrayInputStream.close ()V (35) 400:  goto  #630 403:  astore  %6 405:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 408:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 411:  ldc  &quot;Error closing ByteArrayInputStream&quot; (36) 413:  aload  %6 415:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 418:  goto  #630 421:  astore  %6 423:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 426:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 429:  ldc  &quot;IOException in deserialization&quot; (37) 431:  aload  %6 433:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 436:  aload  %5 438:  ifnull  #446 441:  aload  %5 443:  invokevirtual java.io.ObjectInputStream.close ()V (32) 446:  goto  #464 449:  astore  %6 451:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 454:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 457:  ldc  &quot;Error closing ObjectInputStream&quot; (34) 459:  aload  %6 461:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 464:  aload  %4 466:  ifnull  #474 469:  aload  %4 471:  invokevirtual java.io.ByteArrayInputStream.close ()V (35) 474:  goto  #630 477:  astore  %6 479:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 482:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 485:  ldc  &quot;Error closing ByteArrayInputStream&quot; (36) 487:  aload  %6 489:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 492:  goto  #630 495:  astore  %6 497:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 500:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 503:  ldc  &quot;ClassNotFoundException in deserialization&quot; (39) 505:  aload  %6 507:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 510:  aload  %5 512:  ifnull  #520 515:  aload  %5 517:  invokevirtual java.io.ObjectInputStream.close ()V (32) 520:  goto  #538 523:  astore  %6 525:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 528:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 531:  ldc  &quot;Error closing ObjectInputStream&quot; (34) 533:  aload  %6 535:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 538:  aload  %4 540:  ifnull  #548 543:  aload  %4 545:  invokevirtual java.io.ByteArrayInputStream.close ()V (35) 548:  goto  #630 551:  astore  %6 553:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 556:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 559:  ldc  &quot;Error closing ByteArrayInputStream&quot; (36) 561:  aload  %6 563:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 566:  goto  #630 569:  astore  %12 571:  aload  %5 573:  ifnull  #581 576:  aload  %5 578:  invokevirtual java.io.ObjectInputStream.close ()V (32) 581:  goto  #599 584:  astore  %13 586:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 589:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 592:  ldc  &quot;Error closing ObjectInputStream&quot; (34) 594:  aload  %13 596:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 599:  aload  %4 601:  ifnull  #609 604:  aload  %4 606:  invokevirtual java.io.ByteArrayInputStream.close ()V (35) 609:  goto  #627 612:  astore  %13 614:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 617:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 620:  ldc  &quot;Error closing ByteArrayInputStream&quot; (36) 622:  aload  %13 624:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 627:  aload  %12 629:  athrow 630:  return  Exception handler(s) =  From To Handler Type 156 168 171 java.sql.SQLException(24) 186 198 201 java.sql.SQLException(24) 43 156 219 java.sql.SQLException(24) 234 246 249 java.sql.SQLException(24) 264 276 279 java.sql.SQLException(24) 43 156 297 &lt;Any exception&gt;(0) 219 234 297 &lt;Any exception&gt;(0) 299 311 314 java.sql.SQLException(24) 329 341 344 java.sql.SQLException(24) 297 299 297 &lt;Any exception&gt;(0) 362 372 375 java.io.IOException(33) 390 400 403 java.io.IOException(33) 6 362 421 java.io.IOException(33) 436 446 449 java.io.IOException(33) 464 474 477 java.io.IOException(33) 6 362 495 java.lang.ClassNotFoundException(38) 510 520 523 java.io.IOException(33) 538 548 551 java.io.IOException(33) 6 362 569 &lt;Any exception&gt;(0) 421 436 569 &lt;Any exception&gt;(0) 495 510 569 &lt;Any exception&gt;(0) 571 581 584 java.io.IOException(33) 599 609 612 java.io.IOException(33) 569 571 569 &lt;Any exception&gt;(0)  Attribute(s) =  LineNumber(0, 35), LineNumber(3, 36), LineNumber(6, 40), LineNumber(16, 41),  LineNumber(27, 42), LineNumber(37, 44), LineNumber(40, 45), LineNumber(43, 50),  LineNumber(48, 51), LineNumber(82, 53), LineNumber(94, 55), LineNumber(102, 57),  LineNumber(133, 61), LineNumber(156, 72), LineNumber(161, 74), LineNumber(168, 80),  LineNumber(171, 77), LineNumber(173, 79), LineNumber(186, 84), LineNumber(191, 86),  LineNumber(198, 92), LineNumber(201, 89), LineNumber(203, 91), LineNumber(216, 93),  LineNumber(219, 64), LineNumber(221, 66), LineNumber(234, 72), LineNumber(239, 74),  LineNumber(246, 80), LineNumber(249, 77), LineNumber(251, 79), LineNumber(264, 84),  LineNumber(269, 86), LineNumber(276, 92), LineNumber(279, 89), LineNumber(281, 91),  LineNumber(294, 93), LineNumber(297, 70), LineNumber(299, 72), LineNumber(304, 74),  LineNumber(311, 80), LineNumber(314, 77), LineNumber(316, 79), LineNumber(329, 84),  LineNumber(334, 86), LineNumber(341, 92), LineNumber(344, 89), LineNumber(346, 91),  LineNumber(359, 92), LineNumber(362, 109), LineNumber(367, 111), LineNumber(372, 117),  LineNumber(375, 114), LineNumber(377, 116), LineNumber(390, 121), LineNumber(395, 123),  LineNumber(400, 129), LineNumber(403, 126), LineNumber(405, 128), LineNumber(418, 130),  LineNumber(421, 96), LineNumber(423, 98), LineNumber(436, 109), LineNumber(441, 111),  LineNumber(446, 117), LineNumber(449, 114), LineNumber(451, 116), LineNumber(464, 121),  LineNumber(469, 123), LineNumber(474, 129), LineNumber(477, 126), LineNumber(479, 128),  LineNumber(492, 130), LineNumber(495, 100), LineNumber(497, 102), LineNumber(510, 109),  LineNumber(515, 111), LineNumber(520, 117), LineNumber(523, 114), LineNumber(525, 116),  LineNumber(538, 121), LineNumber(543, 123), LineNumber(548, 129), LineNumber(551, 126),  LineNumber(553, 128), LineNumber(566, 130), LineNumber(569, 107), LineNumber(571, 109),  LineNumber(576, 111), LineNumber(581, 117), LineNumber(584, 114), LineNumber(586, 116),  LineNumber(599, 121), LineNumber(604, 123), LineNumber(609, 129), LineNumber(612, 126),  LineNumber(614, 128), LineNumber(627, 129), LineNumber(630, 131) LocalVariable(start_pc = 94, length = 62, index = 9:Boolean result) LocalVariable(start_pc = 173, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 203, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 221, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 251, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 281, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 316, length = 13, index = 11:java.sql.SQLException exceptSql) LocalVariable(start_pc = 346, length = 13, index = 11:java.sql.SQLException exceptSql) LocalVariable(start_pc = 37, length = 325, index = 6:String data) LocalVariable(start_pc = 40, length = 322, index = 7:java.sql.Connection dbConnection) LocalVariable(start_pc = 43, length = 319, index = 8:java.sql.PreparedStatement sqlStatement) LocalVariable(start_pc = 377, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 405, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 423, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 451, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 479, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 497, length = 13, index = 6:ClassNotFoundException exceptClassNotFound) LocalVariable(start_pc = 525, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 553, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 586, length = 13, index = 13:java.io.IOException exceptIO) LocalVariable(start_pc = 614, length = 13, index = 13:java.io.IOException exceptIO) LocalVariable(start_pc = 0, length = 631, index = 0:testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b this) LocalVariable(start_pc = 0, length = 631, index = 1:byte[] dataSerialized) LocalVariable(start_pc = 0, length = 631, index = 2:javax.servlet.http.HttpServletRequest request) LocalVariable(start_pc = 0, length = 631, index = 3:javax.servlet.http.HttpServletResponse response) LocalVariable(start_pc = 3, length = 628, index = 4:java.io.ByteArrayInputStream streamByteArrayInput) LocalVariable(start_pc = 6, length = 625, index = 5:java.io.ObjectInputStream streamObjectInput) StackMapTable((FULL, offset delta=133, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b), (type=Object, class=[B), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.io.ByteArrayInputStream), (type=Object, class=java.io.ObjectInputStream), (type=Object, class=java.lang.String), (type=Object, class=java.sql.Connection), (type=Object, class=java.sql.PreparedStatement), (type=Object, class=java.lang.Boolean)}), (CHOP 1, offset delta=22), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=26), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.lang.Throwable)}), (APPEND 2, offset delta=13, locals={(type=Bogus), (type=Object, class=java.lang.Throwable)}), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (FULL, offset delta=2, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b), (type=Object, class=[B), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.io.ByteArrayInputStream), (type=Object, class=java.io.ObjectInputStream)}), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=24), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.lang.ClassNotFoundException)}), (SAME, offset delta=24), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.lang.Throwable)}), (FULL, offset delta=11, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b), (type=Object, class=[B), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.io.ByteArrayInputStream), (type=Object, class=java.io.ObjectInputStream), (type=Bogus), (type=Bogus), (type=Bogus), (type=Bogus), (type=Bogus), (type=Bogus), (type=Object, class=java.lang.Throwable)}), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (FULL, offset delta=2, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b), (type=Object, class=[B), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.io.ByteArrayInputStream), (type=Object, class=java.io.ObjectInputStream)})) " />
    <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="42" endBytecode="29" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="42" startBytecode="29" />
    <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="51" endBytecode="69" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="51" startBytecode="69" />
  </BugInstance>
  <BugInstance abbrev="SECSQLIJDBC" category="SECURITY" priority="2" rank="12" type="SQL_INJECTION_JDBC">
    <Class classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b">
      <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="335" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="30" />
    </Class>
    <Method classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" isStatic="false" name="goodG2BSink" signature="([BLjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V">
      <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="232" endBytecode="1752" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="137" startBytecode="0" />
    </Method>
    <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="152" endBytecode="75" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="152" startBytecode="75" />
    <String role="Sink method" value="Connection.prepareStatement(...)" />
    <String role="Instruction Handle" value="  75: invokeinterface[185](5) 15" />
    <String role="Parameter Taint" value="U {toString()}" />
    <String role="Taint Frame" value="[U0[3] {?}U1[2](U) {[?]+[?]}U2[1] {?}U3[0] {?}U4 {[&lt;init&gt;()]+[?]}U5 {&lt;init&gt;()}U6 {readObject()}U7 {getDBConnection()}N8 {NULL}U9 {?}U10 {?}U11 {?}U12 {?}U13 {?}|U7 {getDBConnection()}U {toString()}]" />
    <String role="Method Bytecode" value="Code(max_stack = 4, max_locals = 14, code_length = 631) 0:    aconst_null 1:    astore  %4 3:    aconst_null 4:    astore  %5 6:    new  &lt;java.io.ByteArrayInputStream&gt; (2) 9:    dup 10:   aload_1 11:   invokespecial java.io.ByteArrayInputStream.&lt;init&gt; ([B)V (3) 14:   astore  %4 16:   new  &lt;java.io.ObjectInputStream&gt; (4) 19:   dup 20:   aload  %4 22:   invokespecial java.io.ObjectInputStream.&lt;init&gt; (Ljava/io/InputStream;)V (5) 25:   astore  %5 27:   aload  %5 29:   invokevirtual java.io.ObjectInputStream.readObject ()Ljava/lang/Object; (6) 32:   checkcast  &lt;java.lang.String&gt; (7) 35:   astore  %6 37:   aconst_null 38:   astore  %7 40:   aconst_null 41:   astore  %8 43:   invokestatic testcasesupport.IO.getDBConnection ()Ljava/sql/Connection; (8) 46:   astore  %7 48:   aload  %7 50:   new  &lt;java.lang.StringBuilder&gt; (9) 53:   dup 54:   invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (10) 57:   ldc  &quot;insert into users (status) values ('updated') where name='&quot; (11) 59:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 62:   aload  %6 64:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 67:   ldc  &quot;'&quot; (13) 69:   invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 72:   invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (14) 75:   invokeinterface java.sql.Connection.prepareStatement (Ljava/lang/String;)Ljava/sql/PreparedStatement; (15) 2 0 80:   astore  %8 82:   aload  %8 84:   invokeinterface java.sql.PreparedStatement.execute ()Z (16) 1 0 89:   invokestatic java.lang.Boolean.valueOf (Z)Ljava/lang/Boolean; (17) 92:   astore  %9 94:   aload  %9 96:   invokevirtual java.lang.Boolean.booleanValue ()Z (18) 99:   ifeq  #133 102:  new  &lt;java.lang.StringBuilder&gt; (9) 105:  dup 106:  invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (10) 109:  ldc  &quot;Name, &quot; (19) 111:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 114:  aload  %6 116:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 119:  ldc  &quot;, updated successfully&quot; (20) 121:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 124:  invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (14) 127:  invokestatic testcasesupport.IO.writeLine (Ljava/lang/String;)V (21) 130:  goto  #156 133:  new  &lt;java.lang.StringBuilder&gt; (9) 136:  dup 137:  invokespecial java.lang.StringBuilder.&lt;init&gt; ()V (10) 140:  ldc  &quot;Unable to update records for user: &quot; (22) 142:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 145:  aload  %6 147:  invokevirtual java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (12) 150:  invokevirtual java.lang.StringBuilder.toString ()Ljava/lang/String; (14) 153:  invokestatic testcasesupport.IO.writeLine (Ljava/lang/String;)V (21) 156:  aload  %8 158:  ifnull  #168 161:  aload  %8 163:  invokeinterface java.sql.PreparedStatement.close ()V (23) 1 0 168:  goto  #186 171:  astore  %9 173:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 176:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 179:  ldc  &quot;Error closing PreparedStatement&quot; (27) 181:  aload  %9 183:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 186:  aload  %7 188:  ifnull  #198 191:  aload  %7 193:  invokeinterface java.sql.Connection.close ()V (29) 1 0 198:  goto  #362 201:  astore  %9 203:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 206:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 209:  ldc  &quot;Error closing Connection&quot; (30) 211:  aload  %9 213:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 216:  goto  #362 219:  astore  %9 221:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 224:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 227:  ldc  &quot;Error getting database connection&quot; (31) 229:  aload  %9 231:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 234:  aload  %8 236:  ifnull  #246 239:  aload  %8 241:  invokeinterface java.sql.PreparedStatement.close ()V (23) 1 0 246:  goto  #264 249:  astore  %9 251:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 254:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 257:  ldc  &quot;Error closing PreparedStatement&quot; (27) 259:  aload  %9 261:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 264:  aload  %7 266:  ifnull  #276 269:  aload  %7 271:  invokeinterface java.sql.Connection.close ()V (29) 1 0 276:  goto  #362 279:  astore  %9 281:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 284:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 287:  ldc  &quot;Error closing Connection&quot; (30) 289:  aload  %9 291:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 294:  goto  #362 297:  astore  %10 299:  aload  %8 301:  ifnull  #311 304:  aload  %8 306:  invokeinterface java.sql.PreparedStatement.close ()V (23) 1 0 311:  goto  #329 314:  astore  %11 316:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 319:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 322:  ldc  &quot;Error closing PreparedStatement&quot; (27) 324:  aload  %11 326:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 329:  aload  %7 331:  ifnull  #341 334:  aload  %7 336:  invokeinterface java.sql.Connection.close ()V (29) 1 0 341:  goto  #359 344:  astore  %11 346:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 349:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 352:  ldc  &quot;Error closing Connection&quot; (30) 354:  aload  %11 356:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 359:  aload  %10 361:  athrow 362:  aload  %5 364:  ifnull  #372 367:  aload  %5 369:  invokevirtual java.io.ObjectInputStream.close ()V (32) 372:  goto  #390 375:  astore  %6 377:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 380:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 383:  ldc  &quot;Error closing ObjectInputStream&quot; (34) 385:  aload  %6 387:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 390:  aload  %4 392:  ifnull  #400 395:  aload  %4 397:  invokevirtual java.io.ByteArrayInputStream.close ()V (35) 400:  goto  #630 403:  astore  %6 405:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 408:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 411:  ldc  &quot;Error closing ByteArrayInputStream&quot; (36) 413:  aload  %6 415:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 418:  goto  #630 421:  astore  %6 423:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 426:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 429:  ldc  &quot;IOException in deserialization&quot; (37) 431:  aload  %6 433:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 436:  aload  %5 438:  ifnull  #446 441:  aload  %5 443:  invokevirtual java.io.ObjectInputStream.close ()V (32) 446:  goto  #464 449:  astore  %6 451:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 454:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 457:  ldc  &quot;Error closing ObjectInputStream&quot; (34) 459:  aload  %6 461:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 464:  aload  %4 466:  ifnull  #474 469:  aload  %4 471:  invokevirtual java.io.ByteArrayInputStream.close ()V (35) 474:  goto  #630 477:  astore  %6 479:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 482:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 485:  ldc  &quot;Error closing ByteArrayInputStream&quot; (36) 487:  aload  %6 489:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 492:  goto  #630 495:  astore  %6 497:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 500:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 503:  ldc  &quot;ClassNotFoundException in deserialization&quot; (39) 505:  aload  %6 507:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 510:  aload  %5 512:  ifnull  #520 515:  aload  %5 517:  invokevirtual java.io.ObjectInputStream.close ()V (32) 520:  goto  #538 523:  astore  %6 525:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 528:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 531:  ldc  &quot;Error closing ObjectInputStream&quot; (34) 533:  aload  %6 535:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 538:  aload  %4 540:  ifnull  #548 543:  aload  %4 545:  invokevirtual java.io.ByteArrayInputStream.close ()V (35) 548:  goto  #630 551:  astore  %6 553:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 556:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 559:  ldc  &quot;Error closing ByteArrayInputStream&quot; (36) 561:  aload  %6 563:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 566:  goto  #630 569:  astore  %12 571:  aload  %5 573:  ifnull  #581 576:  aload  %5 578:  invokevirtual java.io.ObjectInputStream.close ()V (32) 581:  goto  #599 584:  astore  %13 586:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 589:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 592:  ldc  &quot;Error closing ObjectInputStream&quot; (34) 594:  aload  %13 596:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 599:  aload  %4 601:  ifnull  #609 604:  aload  %4 606:  invokevirtual java.io.ByteArrayInputStream.close ()V (35) 609:  goto  #627 612:  astore  %13 614:  getstatic  testcasesupport.IO.logger Ljava/util/logging/Logger; (25) 617:  getstatic  java.util.logging.Level.WARNING Ljava/util/logging/Level; (26) 620:  ldc  &quot;Error closing ByteArrayInputStream&quot; (36) 622:  aload  %13 624:  invokevirtual java.util.logging.Logger.log (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V (28) 627:  aload  %12 629:  athrow 630:  return  Exception handler(s) =  From To Handler Type 156 168 171 java.sql.SQLException(24) 186 198 201 java.sql.SQLException(24) 43 156 219 java.sql.SQLException(24) 234 246 249 java.sql.SQLException(24) 264 276 279 java.sql.SQLException(24) 43 156 297 &lt;Any exception&gt;(0) 219 234 297 &lt;Any exception&gt;(0) 299 311 314 java.sql.SQLException(24) 329 341 344 java.sql.SQLException(24) 297 299 297 &lt;Any exception&gt;(0) 362 372 375 java.io.IOException(33) 390 400 403 java.io.IOException(33) 6 362 421 java.io.IOException(33) 436 446 449 java.io.IOException(33) 464 474 477 java.io.IOException(33) 6 362 495 java.lang.ClassNotFoundException(38) 510 520 523 java.io.IOException(33) 538 548 551 java.io.IOException(33) 6 362 569 &lt;Any exception&gt;(0) 421 436 569 &lt;Any exception&gt;(0) 495 510 569 &lt;Any exception&gt;(0) 571 581 584 java.io.IOException(33) 599 609 612 java.io.IOException(33) 569 571 569 &lt;Any exception&gt;(0)  Attribute(s) =  LineNumber(0, 137), LineNumber(3, 138), LineNumber(6, 141), LineNumber(16, 142),  LineNumber(27, 143), LineNumber(37, 145), LineNumber(40, 146), LineNumber(43, 151),  LineNumber(48, 152), LineNumber(82, 154), LineNumber(94, 156), LineNumber(102, 158),  LineNumber(133, 162), LineNumber(156, 173), LineNumber(161, 175), LineNumber(168, 181),  LineNumber(171, 178), LineNumber(173, 180), LineNumber(186, 185), LineNumber(191, 187),  LineNumber(198, 193), LineNumber(201, 190), LineNumber(203, 192), LineNumber(216, 194),  LineNumber(219, 165), LineNumber(221, 167), LineNumber(234, 173), LineNumber(239, 175),  LineNumber(246, 181), LineNumber(249, 178), LineNumber(251, 180), LineNumber(264, 185),  LineNumber(269, 187), LineNumber(276, 193), LineNumber(279, 190), LineNumber(281, 192),  LineNumber(294, 194), LineNumber(297, 171), LineNumber(299, 173), LineNumber(304, 175),  LineNumber(311, 181), LineNumber(314, 178), LineNumber(316, 180), LineNumber(329, 185),  LineNumber(334, 187), LineNumber(341, 193), LineNumber(344, 190), LineNumber(346, 192),  LineNumber(359, 193), LineNumber(362, 210), LineNumber(367, 212), LineNumber(372, 218),  LineNumber(375, 215), LineNumber(377, 217), LineNumber(390, 222), LineNumber(395, 224),  LineNumber(400, 230), LineNumber(403, 227), LineNumber(405, 229), LineNumber(418, 231),  LineNumber(421, 197), LineNumber(423, 199), LineNumber(436, 210), LineNumber(441, 212),  LineNumber(446, 218), LineNumber(449, 215), LineNumber(451, 217), LineNumber(464, 222),  LineNumber(469, 224), LineNumber(474, 230), LineNumber(477, 227), LineNumber(479, 229),  LineNumber(492, 231), LineNumber(495, 201), LineNumber(497, 203), LineNumber(510, 210),  LineNumber(515, 212), LineNumber(520, 218), LineNumber(523, 215), LineNumber(525, 217),  LineNumber(538, 222), LineNumber(543, 224), LineNumber(548, 230), LineNumber(551, 227),  LineNumber(553, 229), LineNumber(566, 231), LineNumber(569, 208), LineNumber(571, 210),  LineNumber(576, 212), LineNumber(581, 218), LineNumber(584, 215), LineNumber(586, 217),  LineNumber(599, 222), LineNumber(604, 224), LineNumber(609, 230), LineNumber(612, 227),  LineNumber(614, 229), LineNumber(627, 230), LineNumber(630, 232) LocalVariable(start_pc = 94, length = 62, index = 9:Boolean result) LocalVariable(start_pc = 173, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 203, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 221, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 251, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 281, length = 13, index = 9:java.sql.SQLException exceptSql) LocalVariable(start_pc = 316, length = 13, index = 11:java.sql.SQLException exceptSql) LocalVariable(start_pc = 346, length = 13, index = 11:java.sql.SQLException exceptSql) LocalVariable(start_pc = 37, length = 325, index = 6:String data) LocalVariable(start_pc = 40, length = 322, index = 7:java.sql.Connection dbConnection) LocalVariable(start_pc = 43, length = 319, index = 8:java.sql.PreparedStatement sqlStatement) LocalVariable(start_pc = 377, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 405, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 423, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 451, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 479, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 497, length = 13, index = 6:ClassNotFoundException exceptClassNotFound) LocalVariable(start_pc = 525, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 553, length = 13, index = 6:java.io.IOException exceptIO) LocalVariable(start_pc = 586, length = 13, index = 13:java.io.IOException exceptIO) LocalVariable(start_pc = 614, length = 13, index = 13:java.io.IOException exceptIO) LocalVariable(start_pc = 0, length = 631, index = 0:testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b this) LocalVariable(start_pc = 0, length = 631, index = 1:byte[] dataSerialized) LocalVariable(start_pc = 0, length = 631, index = 2:javax.servlet.http.HttpServletRequest request) LocalVariable(start_pc = 0, length = 631, index = 3:javax.servlet.http.HttpServletResponse response) LocalVariable(start_pc = 3, length = 628, index = 4:java.io.ByteArrayInputStream streamByteArrayInput) LocalVariable(start_pc = 6, length = 625, index = 5:java.io.ObjectInputStream streamObjectInput) StackMapTable((FULL, offset delta=133, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b), (type=Object, class=[B), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.io.ByteArrayInputStream), (type=Object, class=java.io.ObjectInputStream), (type=Object, class=java.lang.String), (type=Object, class=java.sql.Connection), (type=Object, class=java.sql.PreparedStatement), (type=Object, class=java.lang.Boolean)}), (CHOP 1, offset delta=22), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=26), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.lang.Throwable)}), (APPEND 2, offset delta=13, locals={(type=Bogus), (type=Object, class=java.lang.Throwable)}), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (SAME, offset delta=11), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=14), (FULL, offset delta=2, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b), (type=Object, class=[B), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.io.ByteArrayInputStream), (type=Object, class=java.io.ObjectInputStream)}), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=24), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.lang.ClassNotFoundException)}), (SAME, offset delta=24), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME_LOCALS_1_STACK, offset delta=17, stack items={(type=Object, class=java.lang.Throwable)}), (FULL, offset delta=11, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b), (type=Object, class=[B), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.io.ByteArrayInputStream), (type=Object, class=java.io.ObjectInputStream), (type=Bogus), (type=Bogus), (type=Bogus), (type=Bogus), (type=Bogus), (type=Bogus), (type=Object, class=java.lang.Throwable)}), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (SAME, offset delta=9), (SAME_LOCALS_1_STACK, offset delta=2, stack items={(type=Object, class=java.io.IOException)}), (SAME, offset delta=14), (FULL, offset delta=2, locals={(type=Object, class=testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b), (type=Object, class=[B), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.io.ByteArrayInputStream), (type=Object, class=java.io.ObjectInputStream)})) " />
    <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="143" endBytecode="29" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="143" startBytecode="29" />
    <SourceLine classname="testcases.CWE89_SQL_Injection.s03.CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b" end="152" endBytecode="72" sourcefile="CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" sourcepath="testcases/CWE89_SQL_Injection/s03/CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_75b.java" start="152" startBytecode="72" />
  </BugInstance>
  </BugCollection>