public class CWE89_SQL_Injection__connect_tcp_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__connect_tcp_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__connect_tcp_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__connect_tcp_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__connect_tcp_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__console_readLine_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__console_readLine_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__console_readLine_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__console_readLine_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__console_readLine_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__console_readLine_prepareStatement_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection U3 = null ; PreparedStatement null4 = null ; { U3 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__console_readLine_prepareStatement_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; PreparedStatement taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = dbConnection . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__console_readLine_prepareStatement_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection U5 = null ; PreparedStatement null6 = null ; { U5 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__database_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__database_execute_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U4 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__database_execute_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; Boolean taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__database_execute_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U6 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__database_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__database_executeBatch_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; if ( taintSrc ! = null ) { String U3 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U3 [ i ] + " STRING " ; U6 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__database_executeBatch_68b { public void warningMethod ( ) { String data = data ; if ( data ! = null ) { String taintSrc [ ] = data . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + taintSrc [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__database_executeBatch_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; if ( taintSrc ! = null ) { String U5 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U5 [ i ] + " STRING " ; U8 . injectableMethod ( paramTaint ) ; } } } } } } falsepositive
public class CWE89_SQL_Injection__database_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__database_executeQuery_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; ResultSet null5 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null5 = U4 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__database_executeQuery_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; ResultSet taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__database_executeQuery_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; ResultSet null7 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null7 = U6 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } } falsepositive
public class CWE89_SQL_Injection__database_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__database_executeUpdate_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U4 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__database_executeUpdate_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; int taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__database_executeUpdate_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U6 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__database_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__database_prepareStatement_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection U3 = null ; PreparedStatement null4 = null ; { U3 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__database_prepareStatement_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; PreparedStatement taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = dbConnection . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__database_prepareStatement_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection U5 = null ; PreparedStatement null6 = null ; { U5 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Environment_executeBatch_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; if ( taintSrc ! = null ) { String U3 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U3 [ i ] + " STRING " ; U6 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeBatch_68b { public void warningMethod ( ) { String data = data ; if ( data ! = null ) { String taintSrc [ ] = data . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + taintSrc [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeBatch_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; if ( taintSrc ! = null ) { String U5 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U5 [ i ] + " STRING " ; U8 . injectableMethod ( paramTaint ) ; } } } } } } falsepositive
public class CWE89_SQL_Injection__Environment_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Environment_execute_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U4 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__Environment_execute_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; Boolean taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__Environment_execute_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U6 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Environment_executeQuery_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; ResultSet null5 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null5 = U4 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeQuery_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; ResultSet taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeQuery_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; ResultSet null7 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null7 = U6 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Environment_executeUpdate_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U4 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeUpdate_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; int taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__Environment_executeUpdate_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U6 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__Environment_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Environment_prepareStatement_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection U3 = null ; PreparedStatement null4 = null ; { U3 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__Environment_prepareStatement_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; PreparedStatement taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = dbConnection . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__Environment_prepareStatement_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection U5 = null ; PreparedStatement null6 = null ; { U5 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__File_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__File_execute_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U4 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__File_execute_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; Boolean taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__File_execute_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U6 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__File_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__File_executeBatch_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; if ( taintSrc ! = null ) { String U3 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U3 [ i ] + " STRING " ; U6 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__File_executeBatch_68b { public void warningMethod ( ) { String data = data ; if ( data ! = null ) { String taintSrc [ ] = data . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + taintSrc [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__File_executeBatch_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; if ( taintSrc ! = null ) { String U5 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U5 [ i ] + " STRING " ; U8 . injectableMethod ( paramTaint ) ; } } } } } } falsepositive
public class CWE89_SQL_Injection__File_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__File_executeQuery_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; ResultSet null5 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null5 = U4 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__File_executeQuery_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; ResultSet taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__File_executeQuery_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; ResultSet null7 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null7 = U6 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } } falsepositive
public class CWE89_SQL_Injection__File_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__File_executeUpdate_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U4 = null ; { dbConnection = IO . getDBConnection ( ) ; U4 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U4 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__File_executeUpdate_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; int taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__File_executeUpdate_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U6 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__File_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__File_prepareStatement_67b { public void warningMethod ( Container dataContainer ) { String taintSrc = containerOne ; Connection U3 = null ; PreparedStatement null4 = null ; { U3 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__File_prepareStatement_68b { public void warningMethod ( ) { String data = data ; Connection dbConnection = null ; PreparedStatement taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = dbConnection . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__File_prepareStatement_75b { public void warningMethod ( byte [ ] dataSerialized ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection U5 = null ; PreparedStatement null6 = null ; { U5 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_execute_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U5 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_execute_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U6 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_execute_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; Boolean taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_execute_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U8 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeBatch_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U4 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U7 = null ; { dbConnection = IO . getDBConnection ( ) ; U7 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U4 [ i ] + " STRING " ; U7 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeBatch_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; if ( taintSrc ! = null ) { String U5 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U5 [ i ] + " STRING " ; U8 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeBatch_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; if ( data ! = null ) { String taintSrc [ ] = data . split ( " STRING " ) ; Connection dbConnection = null ; Statement U7 = null ; { dbConnection = IO . getDBConnection ( ) ; U7 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + taintSrc [ i ] + " STRING " ; U7 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeBatch_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; if ( taintSrc ! = null ) { String U7 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U10 = null ; { dbConnection = IO . getDBConnection ( ) ; U10 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U7 [ i ] + " STRING " ; U10 . injectableMethod ( paramTaint ) ; } } } } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeQuery_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; ResultSet null6 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeQuery_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U6 = null ; ResultSet null7 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null7 = U6 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeQuery_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; ResultSet taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeQuery_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U8 = null ; ResultSet null9 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null9 = U8 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeUpdate_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U5 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeUpdate_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U6 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeUpdate_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; int taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_executeUpdate_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U8 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection U4 = null ; PreparedStatement null5 = null ; { U4 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null5 = U4 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection U5 = null ; PreparedStatement null6 = null ; { U5 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; PreparedStatement taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = dbConnection . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getCookies_Servlet_prepareStatement_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection U7 = null ; PreparedStatement null8 = null ; { U7 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null8 = U7 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeBatch_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U4 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U7 = null ; { dbConnection = IO . getDBConnection ( ) ; U7 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U4 [ i ] + " STRING " ; U7 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeBatch_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; if ( taintSrc ! = null ) { String U5 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U5 [ i ] + " STRING " ; U8 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeBatch_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; if ( data ! = null ) { String taintSrc [ ] = data . split ( " STRING " ) ; Connection dbConnection = null ; Statement U7 = null ; { dbConnection = IO . getDBConnection ( ) ; U7 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + taintSrc [ i ] + " STRING " ; U7 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeBatch_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; if ( taintSrc ! = null ) { String U7 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U10 = null ; { dbConnection = IO . getDBConnection ( ) ; U10 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U7 [ i ] + " STRING " ; U10 . injectableMethod ( paramTaint ) ; } } } } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeQuery_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; ResultSet null6 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeQuery_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U6 = null ; ResultSet null7 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null7 = U6 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeQuery_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; ResultSet taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeQuery_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U8 = null ; ResultSet null9 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null9 = U8 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_execute_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U5 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_execute_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U6 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_execute_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; Boolean taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_execute_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U8 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeUpdate_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U5 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeUpdate_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U6 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeUpdate_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; int taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_executeUpdate_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U8 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_prepareStatement_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection U4 = null ; PreparedStatement null5 = null ; { U4 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null5 = U4 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_prepareStatement_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection U5 = null ; PreparedStatement null6 = null ; { U5 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_prepareStatement_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; PreparedStatement taintSrc = null ; { dbConnection = IO . getDBConnection ( ) ; String paramTaint = " STRING " + data + " STRING " ; taintSrc = dbConnection . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getParameter_Servlet_prepareStatement_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection U7 = null ; PreparedStatement null8 = null ; { U7 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null8 = U7 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_execute_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U5 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_execute_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; Connection dbConnection = null ; Statement U6 = null ; { dbConnection = IO . getDBConnection ( ) ; U6 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U6 . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_execute_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; Connection dbConnection = null ; Statement sqlStatement = null ; { dbConnection = IO . getDBConnection ( ) ; sqlStatement = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + data + " STRING " ; Boolean taintSrc = sqlStatement . injectableMethod ( paramTaint ) ; } } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_execute_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U8 . injectableMethod ( paramTaint ) ; } } } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_executeBatch_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U4 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U7 = null ; { dbConnection = IO . getDBConnection ( ) ; U7 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U4 [ i ] + " STRING " ; U7 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_executeBatch_67b { public void warningMethod ( Container dataContainer , HttpServletRequest request , HttpServletResponse response ) { String taintSrc = containerOne ; if ( taintSrc ! = null ) { String U5 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U8 = null ; { dbConnection = IO . getDBConnection ( ) ; U8 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U5 [ i ] + " STRING " ; U8 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_executeBatch_68b { public void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String data = data ; if ( data ! = null ) { String taintSrc [ ] = data . split ( " STRING " ) ; Connection dbConnection = null ; Statement U7 = null ; { dbConnection = IO . getDBConnection ( ) ; U7 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + taintSrc [ i ] + " STRING " ; U7 . injectableMethod ( paramTaint ) ; } } } } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_executeBatch_75b { public void warningMethod ( byte [ ] dataSerialized , HttpServletRequest request , HttpServletResponse response ) { ByteArrayInputStream streamByteArrayInput = null ; ObjectInputStream streamObjectInput = null ; { streamByteArrayInput = new ByteArrayInputStream ( dataSerialized ) ; streamObjectInput = new ObjectInputStream ( streamByteArrayInput ) ; String taintSrc = ( String ) streamObjectInput . readObject ( ) ; if ( taintSrc ! = null ) { String U7 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U10 = null ; { dbConnection = IO . getDBConnection ( ) ; U10 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U7 [ i ] + " STRING " ; U10 . injectableMethod ( paramTaint ) ; } } } } } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_executeQuery_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; ResultSet null6 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null6 = U5 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_executeUpdate_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U5 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__getQueryString_Servlet_prepareStatement_45 extends AbstractTestCaseServlet { private String dataGoodG2B ; private void warningMethod ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc = dataGoodG2B ; Connection U4 = null ; PreparedStatement null5 = null ; { U4 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null5 = U4 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( HttpServletRequest request , HttpServletResponse response ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( request , response ) ; } } falsepositive
public class CWE89_SQL_Injection__listen_tcp_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__listen_tcp_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__listen_tcp_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__listen_tcp_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__listen_tcp_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__PropertiesFile_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__PropertiesFile_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__PropertiesFile_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__PropertiesFile_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__PropertiesFile_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Property_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Property_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Property_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Property_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__Property_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__URLConnection_execute_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; Boolean result = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__URLConnection_executeBatch_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; if ( taintSrc ! = null ) { String U2 [ ] = taintSrc . split ( " STRING " ) ; Connection dbConnection = null ; Statement U5 = null ; { dbConnection = IO . getDBConnection ( ) ; U5 = dbConnection . createStatement ( ) ; for ( int i = 0 ; i < length ; i + + ) { String paramTaint = " STRING " + U2 [ i ] + " STRING " ; U5 . injectableMethod ( paramTaint ) ; } } } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__URLConnection_executeQuery_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; ResultSet null4 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null4 = U3 . injectableMethod ( paramTaint ) ; / * Use ResultSet in some way * / } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__URLConnection_executeUpdate_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection dbConnection = null ; Statement U3 = null ; { dbConnection = IO . getDBConnection ( ) ; U3 = dbConnection . createStatement ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; int rowCount = U3 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive
public class CWE89_SQL_Injection__URLConnection_prepareStatement_45 extends AbstractTestCase { private String dataGoodG2B ; private void warningMethod ( ) { String taintSrc = dataGoodG2B ; Connection U2 = null ; PreparedStatement null3 = null ; { U2 = IO . getDBConnection ( ) ; String paramTaint = " STRING " + taintSrc + " STRING " ; null3 = U2 . injectableMethod ( paramTaint ) ; } } private void goodG2B ( ) { String taintSrc ; taintSrc = " STRING " ; dataGoodG2B = taintSrc ; warningMethod ( ) ; } } falsepositive