doPost (Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
Code(max_stack = 3, max_locals = 8, code_length = 97)
0:    ldc		"" (3)
2:    astore_3
3:    aload_1
4:    invokeinterface	javax.servlet.http.HttpServletRequest.getHeaderNames ()Ljava/util/Enumeration; (4)	1	0
9:    astore		%4
11:   aload		%4
13:   invokeinterface	java.util.Enumeration.hasMoreElements ()Z (5)	1	0
18:   ifeq		#32
21:   aload		%4
23:   invokeinterface	java.util.Enumeration.nextElement ()Ljava/lang/Object; (6)	1	0
28:   checkcast		<java.lang.String> (7)
31:   astore_3
32:   new		<java.lang.StringBuilder> (8)
35:   dup
36:   invokespecial	java.lang.StringBuilder.<init> ()V (9)
39:   ldc		"SELECT * from USERS where USERNAME='foo' and PASSWORD='" (10)
41:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
44:   aload_3
45:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
48:   ldc		"'" (12)
50:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
53:   invokevirtual	java.lang.StringBuilder.toString ()Ljava/lang/String; (13)
56:   astore		%5
58:   invokestatic	org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement ()Ljava/sql/Statement; (14)
61:   astore		%6
63:   aload		%6
65:   aload		%5
67:   invokeinterface	java.sql.Statement.addBatch (Ljava/lang/String;)V (15)	2	0
72:   aload		%6
74:   invokeinterface	java.sql.Statement.executeBatch ()[I (16)	1	0
79:   astore		%7
81:   goto		#96
84:   astore		%6
86:   new		<javax.servlet.ServletException> (18)
89:   dup
90:   aload		%6
92:   invokespecial	javax.servlet.ServletException.<init> (Ljava/lang/Throwable;)V (19)
95:   athrow
96:   return

Exception handler(s) = 
From	To	Handler	Type
58	81	84	java.sql.SQLException(17)

Attribute(s) = 
LineNumber(0, 43), LineNumber(3, 44), LineNumber(11, 45), LineNumber(21, 46), 
LineNumber(32, 50), LineNumber(58, 53), LineNumber(63, 54), LineNumber(72, 55), 
LineNumber(81, 58), LineNumber(84, 56), LineNumber(86, 57), LineNumber(96, 59)

LocalVariable(start_pc = 63, length = 18, index = 6:java.sql.Statement statement)
LocalVariable(start_pc = 86, length = 10, index = 6:java.sql.SQLException e)
LocalVariable(start_pc = 0, length = 97, index = 0:org.owasp.benchmark.testcode.BenchmarkTest00082 this)
LocalVariable(start_pc = 0, length = 97, index = 1:javax.servlet.http.HttpServletRequest request)
LocalVariable(start_pc = 0, length = 97, index = 2:javax.servlet.http.HttpServletResponse response)
LocalVariable(start_pc = 3, length = 94, index = 3:String param)
LocalVariable(start_pc = 11, length = 86, index = 4:java.util.Enumeration headerNames)
LocalVariable(start_pc = 58, length = 39, index = 5:String sql)
LocalVariable(start_pc = 11, length = 86, index = 4:java.util.Enumeration<Ljava.lang.String headerNames)
StackMapTable((APPEND 2, offset delta=32, locals={(type=Object, class=java.lang.String), (type=Object, class=java.util.Enumeration)}), (FULL, offset delta=51, locals={(type=Object, class=org.owasp.benchmark.testcode.BenchmarkTest00082), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.lang.String), (type=Object, class=java.util.Enumeration), (type=Object, class=java.lang.String)}, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=11))

doPost (Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
Code(max_stack = 3, max_locals = 8, code_length = 97)
0:    ldc		"" (3)
2:    astore_3
3:    aload_1
4:    invokeinterface	javax.servlet.http.HttpServletRequest.getHeaderNames ()Ljava/util/Enumeration; (4)	1	0
9:    astore		%4
11:   aload		%4
13:   invokeinterface	java.util.Enumeration.hasMoreElements ()Z (5)	1	0
18:   ifeq		#32
21:   aload		%4
23:   invokeinterface	java.util.Enumeration.nextElement ()Ljava/lang/Object; (6)	1	0
28:   checkcast		<java.lang.String> (7)
31:   astore_3
32:   new		<java.lang.StringBuilder> (8)
35:   dup
36:   invokespecial	java.lang.StringBuilder.<init> ()V (9)
39:   ldc		"SELECT * from USERS where USERNAME='foo' and PASSWORD='" (10)
41:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
44:   aload_3
45:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
48:   ldc		"'" (12)
50:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
53:   invokevirtual	java.lang.StringBuilder.toString ()Ljava/lang/String; (13)
56:   astore		%5
58:   invokestatic	org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement ()Ljava/sql/Statement; (14)
61:   astore		%6
63:   aload		%6
65:   aload		%5
67:   invokeinterface	java.sql.Statement.addBatch (Ljava/lang/String;)V (15)	2	0
72:   aload		%6
74:   invokeinterface	java.sql.Statement.executeBatch ()[I (16)	1	0
79:   astore		%7
81:   goto		#96
84:   astore		%6
86:   new		<javax.servlet.ServletException> (18)
89:   dup
90:   aload		%6
92:   invokespecial	javax.servlet.ServletException.<init> (Ljava/lang/Throwable;)V (19)
95:   athrow
96:   return

Exception handler(s) = 
From	To	Handler	Type
58	81	84	java.sql.SQLException(17)

Attribute(s) = 
LineNumber(0, 43), LineNumber(3, 44), LineNumber(11, 45), LineNumber(21, 46), 
LineNumber(32, 50), LineNumber(58, 53), LineNumber(63, 54), LineNumber(72, 55), 
LineNumber(81, 58), LineNumber(84, 56), LineNumber(86, 57), LineNumber(96, 59)

LocalVariable(start_pc = 63, length = 18, index = 6:java.sql.Statement statement)
LocalVariable(start_pc = 86, length = 10, index = 6:java.sql.SQLException e)
LocalVariable(start_pc = 0, length = 97, index = 0:org.owasp.benchmark.testcode.BenchmarkTest00082 this)
LocalVariable(start_pc = 0, length = 97, index = 1:javax.servlet.http.HttpServletRequest request)
LocalVariable(start_pc = 0, length = 97, index = 2:javax.servlet.http.HttpServletResponse response)
LocalVariable(start_pc = 3, length = 94, index = 3:String param)
LocalVariable(start_pc = 11, length = 86, index = 4:java.util.Enumeration headerNames)
LocalVariable(start_pc = 58, length = 39, index = 5:String sql)
LocalVariable(start_pc = 11, length = 86, index = 4:java.util.Enumeration<Ljava.lang.String headerNames)
StackMapTable((APPEND 2, offset delta=32, locals={(type=Object, class=java.lang.String), (type=Object, class=java.util.Enumeration)}), (FULL, offset delta=51, locals={(type=Object, class=org.owasp.benchmark.testcode.BenchmarkTest00082), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.lang.String), (type=Object, class=java.util.Enumeration), (type=Object, class=java.lang.String)}, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=11))

doPost (Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
Code(max_stack = 3, max_locals = 8, code_length = 97)
0:    ldc		"" (3)
2:    astore_3
3:    aload_1
4:    invokeinterface	javax.servlet.http.HttpServletRequest.getHeaderNames ()Ljava/util/Enumeration; (4)	1	0
9:    astore		%4
11:   aload		%4
13:   invokeinterface	java.util.Enumeration.hasMoreElements ()Z (5)	1	0
18:   ifeq		#32
21:   aload		%4
23:   invokeinterface	java.util.Enumeration.nextElement ()Ljava/lang/Object; (6)	1	0
28:   checkcast		<java.lang.String> (7)
31:   astore_3
32:   new		<java.lang.StringBuilder> (8)
35:   dup
36:   invokespecial	java.lang.StringBuilder.<init> ()V (9)
39:   ldc		"SELECT * from USERS where USERNAME='foo' and PASSWORD='" (10)
41:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
44:   aload_3
45:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
48:   ldc		"'" (12)
50:   invokevirtual	java.lang.StringBuilder.append (Ljava/lang/String;)Ljava/lang/StringBuilder; (11)
53:   invokevirtual	java.lang.StringBuilder.toString ()Ljava/lang/String; (13)
56:   astore		%5
58:   invokestatic	org.owasp.benchmark.helpers.DatabaseHelper.getSqlStatement ()Ljava/sql/Statement; (14)
61:   astore		%6
63:   aload		%6
65:   aload		%5
67:   invokeinterface	java.sql.Statement.addBatch (Ljava/lang/String;)V (15)	2	0
72:   aload		%6
74:   invokeinterface	java.sql.Statement.executeBatch ()[I (16)	1	0
79:   astore		%7
81:   goto		#96
84:   astore		%6
86:   new		<javax.servlet.ServletException> (18)
89:   dup
90:   aload		%6
92:   invokespecial	javax.servlet.ServletException.<init> (Ljava/lang/Throwable;)V (19)
95:   athrow
96:   return

Exception handler(s) = 
From	To	Handler	Type
58	81	84	java.sql.SQLException(17)

Attribute(s) = 
LineNumber(0, 43), LineNumber(3, 44), LineNumber(11, 45), LineNumber(21, 46), 
LineNumber(32, 50), LineNumber(58, 53), LineNumber(63, 54), LineNumber(72, 55), 
LineNumber(81, 58), LineNumber(84, 56), LineNumber(86, 57), LineNumber(96, 59)

LocalVariable(start_pc = 63, length = 18, index = 6:java.sql.Statement statement)
LocalVariable(start_pc = 86, length = 10, index = 6:java.sql.SQLException e)
LocalVariable(start_pc = 0, length = 97, index = 0:org.owasp.benchmark.testcode.BenchmarkTest00082 this)
LocalVariable(start_pc = 0, length = 97, index = 1:javax.servlet.http.HttpServletRequest request)
LocalVariable(start_pc = 0, length = 97, index = 2:javax.servlet.http.HttpServletResponse response)
LocalVariable(start_pc = 3, length = 94, index = 3:String param)
LocalVariable(start_pc = 11, length = 86, index = 4:java.util.Enumeration headerNames)
LocalVariable(start_pc = 58, length = 39, index = 5:String sql)
LocalVariable(start_pc = 11, length = 86, index = 4:java.util.Enumeration<Ljava.lang.String headerNames)
StackMapTable((APPEND 2, offset delta=32, locals={(type=Object, class=java.lang.String), (type=Object, class=java.util.Enumeration)}), (FULL, offset delta=51, locals={(type=Object, class=org.owasp.benchmark.testcode.BenchmarkTest00082), (type=Object, class=javax.servlet.http.HttpServletRequest), (type=Object, class=javax.servlet.http.HttpServletResponse), (type=Object, class=java.lang.String), (type=Object, class=java.util.Enumeration), (type=Object, class=java.lang.String)}, stack items={(type=Object, class=java.sql.SQLException)}), (SAME, offset delta=11))

